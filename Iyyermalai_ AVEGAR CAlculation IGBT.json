[
    {
        "id": "72df23d95fecd30c",
        "type": "cronplus",
        "z": "1a7c4fe4b72c9dfd",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "10 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 220,
        "wires": [
            [
                "6654bb3f2212b35a"
            ]
        ]
    },
    {
        "id": "97aaf444ba82f661",
        "type": "function",
        "z": "1a7c4fe4b72c9dfd",
        "name": "IGBT_Deviation_alarm",
        "func": "let plantObj\nplantObj = []\n\nvar sum = 0\n\nvar IGBTAVG;\nvar IGBT_Deviation_Alarm\n\nfor (var i = 0; i < msg.payload.length; i++) {\n  var igbt_value = msg.payload[i]._value;\n  {\n    IGBTAVG = sum += msg.payload[i]._value\n    IGBTAVG = sum / msg.payload.length\n    flow.set(\"IGBTAVG\", IGBTAVG)\n  }\n}\n\nfor (var i = 0; i < msg.payload.length; i++) {\n  var time = msg.payload[i]._time;\n  var b = msg.payload[i].b;\n  var bd = msg.payload[i].d;\n  var d = msg.payload[i].d;\n  var dd = msg.payload[i].dd;\n  var dt = msg.payload[i].dt;\n  var f = msg.payload[i].f;\n  var fd = msg.payload[i].fd;\n  var h = msg.payload[i].h;\n  var iid = msg.payload[i].iid;\n  var m = msg.payload[i].m;\n  var p = msg.payload[i].p;\n  var u = msg.payload[i].u;\n  var igbt_value = msg.payload[i]._value;\n  {\n    if (IGBTAVG < msg.payload[i]._value) {\n      IGBT_Deviation_Alarm = 1\n    }\n    if (IGBTAVG > msg.payload[i]._value) {\n      IGBT_Deviation_Alarm = 0\n    }\n\n    var obj1 =\n    {\n      time,\n      b,\n      bd,\n      d,\n      dd,\n      dt,\n      f,\n      fd,\n      h,\n      iid,\n      m,\n      p,\n      u,\n      IGBTAVG,\n      IGBT_Deviation_Alarm\n\n    }\n    plantObj.push(obj1)\n\n  }\n}\nmsg.payload = plantObj\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "c8c7fb47faf69a66"
            ]
        ]
    },
    {
        "id": "c8c7fb47faf69a66",
        "type": "function",
        "z": "1a7c4fe4b72c9dfd",
        "name": "value field",
        "func": "\nlet plantObj\nplantObj = []\n\nfor (var i = 0; i < msg.payload.length; i++)\n {\n\n    var value = msg.payload[i].IGBT_Deviation_Alarm\n    var tag = \"IGBT_Deviation_Alarm\"\n    var time = msg.payload[i].time;\n    var b = msg.payload[i].b;\n    var bd = msg.payload[i].d;\n    var d = msg.payload[i].d;\n    var dd = msg.payload[i].dd;\n    var dt = msg.payload[i].dt;\n    var f = msg.payload[i].f;\n    var fd = \"IGBT_Deviation_Alarm\";\n    var h = msg.payload[i].h;\n    var iid = msg.payload[i].iid;\n    var m = msg.payload[i].m;\n    var p = msg.payload[i].p;\n    var u = msg.payload[i].u;\n\n\n\n var obj1 =\n {\n time,\n b,\n bd,\n d,\n dd,\n dt,\n f,\n fd,\n h,\n iid,\n m,\n p,\n u,\n value,\n tag\n\n }\n plantObj.push(obj1)\n\n \n}\n\nmsg.payload = plantObj\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 220,
        "wires": [
            [
                "79a21c2112ad8055",
                "40d33e70141df678"
            ]
        ]
    },
    {
        "id": "79a21c2112ad8055",
        "type": "function",
        "z": "1a7c4fe4b72c9dfd",
        "name": "influx table",
        "func": "\n\nfor (var i = 0 ; i < msg.payload.length; i++) {\n       var obj = {};\n    \n    obj.payload =\n        [\n {\n measurement: \"Iyyer_test\",\n \n fields: {\n\n value: msg.payload[i].value,\n text:\"0\",\n qu:\"0\"\n\n },\n tags: {\n b : msg.payload[i].b,\n bd : msg.payload[i].d,\n d :msg.payload[i].d,\n dd : msg.payload[i].dd,\n dt : msg.payload[i].dt,\n f :msg.payload[i].tag,\n fd : msg.payload[i].fd,\n h :msg.payload[i].h,\n iid : msg.payload[i].iid,\n m : msg.payload[i].m,\n p : msg.payload[i].p,\n u : msg.payload[i].u\n \n\n },\n\n time: msg.payload[i].time\n }\n ];\n\n //plantObj.push(obj)\n node.send(obj);\n}\n\n//msg.payload = plantObj\n\n//return msg;\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 220,
        "wires": [
            [
                "1d3084e60dd62c77",
                "f095ab682b90adb7"
            ]
        ]
    },
    {
        "id": "8e6a54a4ef61ca21",
        "type": "debug",
        "z": "1a7c4fe4b72c9dfd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 300,
        "wires": []
    },
    {
        "id": "1d3084e60dd62c77",
        "type": "debug",
        "z": "1a7c4fe4b72c9dfd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 220,
        "wires": []
    },
    {
        "id": "f095ab682b90adb7",
        "type": "influxdb batch",
        "z": "1a7c4fe4b72c9dfd",
        "influxdb": "c006a6cbdf4a6746",
        "precision": "",
        "retentionPolicy": "",
        "name": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "largeutilitylakeasia",
        "bucket": "tata",
        "x": 1210,
        "y": 300,
        "wires": []
    },
    {
        "id": "6654bb3f2212b35a",
        "type": "influxdb in",
        "z": "1a7c4fe4b72c9dfd",
        "influxdb": "c006a6cbdf4a6746",
        "name": "testdb 2.0",
        "query": "  from(bucket: \"tata\")|> range(start:  -5m)|> filter(fn: (r) => r[\"_measurement\"] == \"v\") |> filter(fn: (r) => r[\"p\"] == \"Iyyermalai\")|> filter(fn: (r) => r[\"d\"] =~ /INV/)|> filter(fn: (r) => r[\"f\"] == \"IGBT_TEMP\")|> filter(fn: (r) => r[\"_field\"] == \"value\")|> yield(name: \"IGBT_TEMP\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "largeutilitylakeasia",
        "x": 320,
        "y": 220,
        "wires": [
            [
                "8e6a54a4ef61ca21",
                "97aaf444ba82f661"
            ]
        ]
    },
    {
        "id": "40d33e70141df678",
        "type": "function",
        "z": "1a7c4fe4b72c9dfd",
        "name": "influx table",
        "func": "\nlet IGBTAVG = flow.get(\"IGBTAVG\")\n\nfor (var i = 0; i < msg.payload.length; i++) {\n       var obj = {};\n\n       obj.payload =\n              [\n                     {\n                            measurement: \"Iyyer_test\",\n\n                            fields: {\n\n                                   value: IGBTAVG,\n                                   text: \"0\",\n                                   qu: \"0\"\n\n                            },\n                            tags: {\n                                   b: msg.payload[i].b,\n                                   bd: msg.payload[i].d,\n                                   d: msg.payload[i].d,\n                                   dd: msg.payload[i].dd,\n                                   dt: msg.payload[i].dt,\n                                   f: \"IGBTAVG\",\n                                   fd: \"IGBTAVG\",\n                                   h: msg.payload[i].h,\n                                   iid: msg.payload[i].iid,\n                                   m: msg.payload[i].m,\n                                   p: msg.payload[i].p,\n                                   u: msg.payload[i].u\n\n\n                            },\n\n                            time: msg.payload[i].time\n                     }\n              ];\n\n       //plantObj.push(obj)\n       node.send(obj);\n}\n\n//msg.payload = plantObj\n\n//return msg;\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 360,
        "wires": [
            [
                "2613835b07632906",
                "f095ab682b90adb7"
            ]
        ]
    },
    {
        "id": "2613835b07632906",
        "type": "debug",
        "z": "1a7c4fe4b72c9dfd",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 360,
        "wires": []
    },
    {
        "id": "c006a6cbdf4a6746",
        "type": "influxdb",
        "hostname": "http://34.93.63.75",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://iplon-pvindia.com:31086",
        "rejectUnauthorized": true
    }
]